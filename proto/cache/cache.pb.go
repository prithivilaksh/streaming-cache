// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/cache/cache.proto

package cache

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Tkr struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tkr           string                 `protobuf:"bytes,1,opt,name=tkr,proto3" json:"tkr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tkr) Reset() {
	*x = Tkr{}
	mi := &file_proto_cache_cache_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tkr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tkr) ProtoMessage() {}

func (x *Tkr) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cache_cache_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tkr.ProtoReflect.Descriptor instead.
func (*Tkr) Descriptor() ([]byte, []int) {
	return file_proto_cache_cache_proto_rawDescGZIP(), []int{0}
}

func (x *Tkr) GetTkr() string {
	if x != nil {
		return x.Tkr
	}
	return ""
}

type TkrData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tkr           string                 `protobuf:"bytes,1,opt,name=tkr,proto3" json:"tkr,omitempty"`
	Timestamp     int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Price         float64                `protobuf:"fixed64,3,opt,name=price,proto3" json:"price,omitempty"`
	Volume        int64                  `protobuf:"varint,4,opt,name=volume,proto3" json:"volume,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TkrData) Reset() {
	*x = TkrData{}
	mi := &file_proto_cache_cache_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TkrData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TkrData) ProtoMessage() {}

func (x *TkrData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cache_cache_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TkrData.ProtoReflect.Descriptor instead.
func (*TkrData) Descriptor() ([]byte, []int) {
	return file_proto_cache_cache_proto_rawDescGZIP(), []int{1}
}

func (x *TkrData) GetTkr() string {
	if x != nil {
		return x.Tkr
	}
	return ""
}

func (x *TkrData) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TkrData) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *TkrData) GetVolume() int64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

type Ack struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ack) Reset() {
	*x = Ack{}
	mi := &file_proto_cache_cache_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ack) ProtoMessage() {}

func (x *Ack) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cache_cache_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ack.ProtoReflect.Descriptor instead.
func (*Ack) Descriptor() ([]byte, []int) {
	return file_proto_cache_cache_proto_rawDescGZIP(), []int{2}
}

func (x *Ack) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_proto_cache_cache_proto protoreflect.FileDescriptor

const file_proto_cache_cache_proto_rawDesc = "" +
	"\n" +
	"\x17proto/cache/cache.proto\x12\x05cache\"\x17\n" +
	"\x03Tkr\x12\x10\n" +
	"\x03tkr\x18\x01 \x01(\tR\x03tkr\"g\n" +
	"\aTkrData\x12\x10\n" +
	"\x03tkr\x18\x01 \x01(\tR\x03tkr\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x03R\ttimestamp\x12\x14\n" +
	"\x05price\x18\x03 \x01(\x01R\x05price\x12\x16\n" +
	"\x06volume\x18\x04 \x01(\x03R\x06volume\"\x1f\n" +
	"\x03Ack\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess2\xad\x01\n" +
	"\x05Cache\x12#\n" +
	"\x03Get\x12\n" +
	".cache.Tkr\x1a\x0e.cache.TkrData\"\x00\x12+\n" +
	"\tGetStream\x12\n" +
	".cache.Tkr\x1a\x0e.cache.TkrData\"\x000\x01\x12#\n" +
	"\x03Set\x12\x0e.cache.TkrData\x1a\n" +
	".cache.Ack\"\x00\x12-\n" +
	"\tSetStream\x12\x0e.cache.TkrData\x1a\n" +
	".cache.Ack\"\x00(\x010\x01B<Z:github.com/prithivilaksh/streaming-cache/proto/cache;cacheb\x06proto3"

var (
	file_proto_cache_cache_proto_rawDescOnce sync.Once
	file_proto_cache_cache_proto_rawDescData []byte
)

func file_proto_cache_cache_proto_rawDescGZIP() []byte {
	file_proto_cache_cache_proto_rawDescOnce.Do(func() {
		file_proto_cache_cache_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_cache_cache_proto_rawDesc), len(file_proto_cache_cache_proto_rawDesc)))
	})
	return file_proto_cache_cache_proto_rawDescData
}

var file_proto_cache_cache_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_cache_cache_proto_goTypes = []any{
	(*Tkr)(nil),     // 0: cache.Tkr
	(*TkrData)(nil), // 1: cache.TkrData
	(*Ack)(nil),     // 2: cache.Ack
}
var file_proto_cache_cache_proto_depIdxs = []int32{
	0, // 0: cache.Cache.Get:input_type -> cache.Tkr
	0, // 1: cache.Cache.GetStream:input_type -> cache.Tkr
	1, // 2: cache.Cache.Set:input_type -> cache.TkrData
	1, // 3: cache.Cache.SetStream:input_type -> cache.TkrData
	1, // 4: cache.Cache.Get:output_type -> cache.TkrData
	1, // 5: cache.Cache.GetStream:output_type -> cache.TkrData
	2, // 6: cache.Cache.Set:output_type -> cache.Ack
	2, // 7: cache.Cache.SetStream:output_type -> cache.Ack
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_cache_cache_proto_init() }
func file_proto_cache_cache_proto_init() {
	if File_proto_cache_cache_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_cache_cache_proto_rawDesc), len(file_proto_cache_cache_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_cache_cache_proto_goTypes,
		DependencyIndexes: file_proto_cache_cache_proto_depIdxs,
		MessageInfos:      file_proto_cache_cache_proto_msgTypes,
	}.Build()
	File_proto_cache_cache_proto = out.File
	file_proto_cache_cache_proto_goTypes = nil
	file_proto_cache_cache_proto_depIdxs = nil
}
